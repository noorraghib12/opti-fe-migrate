@import "tailwindcss";

/* Keyframes used by legacy/dynamic animations to guarantee availability */
@layer utilities {
  /* existing */
  @keyframes gradientRotate {
    0% { transform: rotate(0deg) scale(1); }
    50% { transform: rotate(180deg) scale(1.2); }
    100% { transform: rotate(360deg) scale(1); }
  }
  @keyframes gridMove {
    0% { transform: translate(0, 0); }
    100% { transform: translate(50px, 50px); }
  }
  @keyframes matrixFall {
    0% { transform: translateY(0); }
    100% { transform: translateY(200vh); }
  }

  /* required by acceptance criteria */
  @keyframes cyanPulse {
    0%, 100% { filter: brightness(1) drop-shadow(0 0 15px rgba(0, 255, 255, 0.6)); transform: translateY(0) scale(1); }
    50% { filter: brightness(1.1) drop-shadow(0 0 25px rgba(0, 255, 255, 0.8)); transform: translateY(-2px) scale(1.01); }
  }
  @keyframes purplePulse {
    0%, 100% { filter: brightness(1) drop-shadow(0 0 15px rgba(255, 0, 255, 0.6)); transform: translateY(0) scale(1); }
    50% { filter: brightness(1.1) drop-shadow(0 0 25px rgba(255, 0, 255, 0.8)); transform: translateY(-2px) scale(1.01); }
  }
  @keyframes glowPulse {
    0%, 100% { opacity: 0.5; transform: translate(-50%, -50%) scale(0.9); }
    50% { opacity: 0.8; transform: translate(-50%, -50%) scale(1); }
  }
  @keyframes orbFloat {
    0%, 100% { transform: translate(0, 0) scale(1); }
    33% { transform: translate(100px, -50px) scale(1.1); }
    66% { transform: translate(-50px, 100px) scale(0.9); }
  }
  @keyframes scanline {
    0% { transform: translateY(-100%); }
    100% { transform: translateY(100%); }
  }
  @keyframes slideInLeft {
    from { opacity: 0; transform: translateX(20px); }
    to { opacity: 1; transform: translateX(0); }
  }
  @keyframes slideInUp {
    from { opacity: 0; transform: translateY(20px); }
    to { opacity: 1; transform: translateY(0); }
  }
  @keyframes float {
    0% { transform: translateY(100vh) translateX(0); opacity: 0; }
    10% { opacity: 1; }
    90% { opacity: 1; }
    100% { transform: translateY(-100vh) translateX(100px); opacity: 0; }
  }
  @keyframes dataFlow {
    0% { width: 0; opacity: 0; transform: translateX(0); }
    50% { width: 300px; opacity: 0.8; }
    100% { width: 0; opacity: 0; transform: translateX(100vw); }
  }
  @keyframes blink {
    0%, 50% { opacity: 1; }
    51%, 100% { opacity: 0; }
  }

  /* Helpers for properties not in core Tailwind */
  .writing-mode-vertical-rl { writing-mode: vertical-rl; }
  .text-orientation-upright { text-orientation: upright; }
}

/* Component mappings for dynamic/JS-toggled classes */
@layer components {
  .fade-up { @apply opacity-0 translate-y-12 transition-all duration-800 ease-linear; }
  .visible { @apply opacity-100 translate-y-0; }
  .mobile-menu.active { @apply translate-x-0; }
  .mobile-menu-overlay.active { @apply opacity-100 visible; }

  /* Matrix rain column generated by JS */
  .matrix-column {
    @apply absolute -top-[100vh] font-mono text-[14px] text-cyan-400 animate-[matrixFall_linear_infinite] writing-mode-vertical-rl text-orientation-upright bg-gradient-to-b from-transparent via-cyan-400 to-transparent bg-clip-text text-transparent;
    text-shadow: 0 0 5px #00ffff;
  }

  /* Floating particle generated by JS */
  .particle {
    @apply absolute w-[4px] h-[4px] bg-cyan-400 rounded-full animate-[float_20s_infinite] opacity-0 transition-[transform,box-shadow] duration-300 ease-linear;
    box-shadow: 0 0 10px #00ffff;
  }
  /* Optional alternate styling for odd particles (can be toggled via JS if needed) */
  .particle:nth-child(odd) {
    background: #ff00ff;
    box-shadow: 0 0 10px #ff00ff;
  }
}

html, body {
  @apply bg-[#0f051a] text-white;
}
